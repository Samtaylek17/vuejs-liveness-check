(function(n){function e(e){for(var t,r,m=e[0],u=e[1],l=e[2],k=0,b=[];k<m.length;k++)r=m[k],Object.prototype.hasOwnProperty.call(i,r)&&i[r]&&b.push(i[r][0]),i[r]=0;for(t in u)Object.prototype.hasOwnProperty.call(u,t)&&(n[t]=u[t]);d&&d(e);while(b.length)b.shift()();return s.push.apply(s,l||[]),a()}function a(){for(var n,e=0;e<s.length;e++){for(var a=s[e],t=!0,m=1;m<a.length;m++){var u=a[m];0!==i[u]&&(t=!1)}t&&(s.splice(e--,1),n=r(r.s=a[0]))}return n}var t={},i={app:0},s=[];function r(e){if(t[e])return t[e].exports;var a=t[e]={i:e,l:!1,exports:{}};return n[e].call(a.exports,a,a.exports,r),a.l=!0,a.exports}r.m=n,r.c=t,r.d=function(n,e,a){r.o(n,e)||Object.defineProperty(n,e,{enumerable:!0,get:a})},r.r=function(n){"undefined"!==typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(n,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(n,"__esModule",{value:!0})},r.t=function(n,e){if(1&e&&(n=r(n)),8&e)return n;if(4&e&&"object"===typeof n&&n&&n.__esModule)return n;var a=Object.create(null);if(r.r(a),Object.defineProperty(a,"default",{enumerable:!0,value:n}),2&e&&"string"!=typeof n)for(var t in n)r.d(a,t,function(e){return n[e]}.bind(null,t));return a},r.n=function(n){var e=n&&n.__esModule?function(){return n["default"]}:function(){return n};return r.d(e,"a",e),e},r.o=function(n,e){return Object.prototype.hasOwnProperty.call(n,e)},r.p="/";var m=window["webpackJsonp"]=window["webpackJsonp"]||[],u=m.push.bind(m);m.push=e,m=m.slice();for(var l=0;l<m.length;l++)e(m[l]);var d=u;s.push([0,"chunk-vendors"]),a()})({0:function(n,e,a){n.exports=a("cd49")},"034f":function(n,e,a){"use strict";a("85ec")},1:function(n,e){},2:function(n,e){},"2d1f":function(n){n.exports=JSON.parse('{"v":"5.6.5","fr":29.9700012207031,"ip":0,"op":50.0000020365418,"w":500,"h":500,"nm":"Step 2 - Help - Clipped","ddd":0,"assets":[{"id":"comp_0","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Target","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[192,228,0],"ix":2},"a":{"a":0,"k":[-81,-107,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":17,"s":[100,100,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":22,"s":[134,134,100]},{"t":27.0000010997325,"s":[0,0,100]}],"ix":6,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[29.191,29.191],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":7,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"d":[{"n":"d","nm":"dash","v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[5]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":12,"s":[5]},{"t":22.0000008960784,"s":[137]}],"ix":1}},{"n":"o","nm":"offset","v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":70.0000028511585,"s":[54]}],"ix":7}}],"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[-81.404,-106.404],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Nose","parent":8,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[11]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":25,"s":[11]},{"t":40.0000016292334,"s":[0]}],"ix":10,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[2,-55,0],"to":[-4.733,-0.258,0],"ti":[4.733,0.258,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[-26.401,-56.55,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[-26.401,-56.55,0],"to":[4.733,0.258,0],"ti":[-4.733,-0.258,0]},{"t":40.0000016292334,"s":[2,-55,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[2,-44,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[-2.865,0.932],[0,0]],"o":[[0,0],[0,0],[2.891,0.847],[0,0],[0,0]],"v":[[0.11,-24.049],[-18.29,19.181],[-4.549,23.202],[4.286,23.072],[18.29,18.516]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[2.342,-35.915],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Mouth","parent":8,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[8]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":25,"s":[8]},{"t":40.0000016292334,"s":[0]}],"ix":10,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1,1,0],"to":[-5.851,0.215,0],"ti":[5.851,-0.215,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[-34.105,2.288,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[-34.105,2.288,0],"to":[5.851,-0.215,0],"ti":[-5.851,0.215,0]},{"t":40.0000016292334,"s":[1,1,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,14,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[{"i":[[0.047,-8.815],[-13.223,-0.07],[-0.047,8.815],[13.223,0.071]],"o":[[-0.047,8.815],[13.224,0.07],[0.047,-8.816],[-13.223,-0.07]],"v":[[-23.943,-3.673],[-0.086,12.418],[23.943,-3.416],[0.798,-3.54]],"c":true}]},{"i":{"x":0.758,"y":0.733},"o":{"x":0.167,"y":0.167},"t":10,"s":[{"i":[[1.961,-3.297],[-6.299,0.504],[2.754,4.642],[6.539,-0.392]],"o":[[0.263,3.887],[8.382,-0.671],[-0.831,-1.401],[-3.939,0.236]],"v":[[-20.067,-7.558],[-7.366,-3.965],[6.971,-11.378],[-7.614,-8.533]],"c":true}]},{"i":{"x":0.096,"y":0.371},"o":{"x":0.196,"y":0.232},"t":25,"s":[{"i":[[1.961,-3.297],[-6.299,0.504],[2.754,4.642],[6.539,-0.392]],"o":[[0.263,3.887],[8.382,-0.671],[-0.831,-1.401],[-3.939,0.236]],"v":[[-20.067,-7.558],[-7.366,-3.965],[6.971,-11.378],[-7.614,-8.533]],"c":true}]},{"t":33.0000013441176,"s":[{"i":[[0.047,-8.815],[-13.223,-0.07],[-0.047,8.815],[13.223,0.071]],"o":[[-0.047,8.815],[13.224,0.07],[0.047,-8.816],[-13.223,-0.07]],"v":[[-23.943,-3.673],[-0.211,18.23],[23.943,-3.416],[0.798,-3.54]],"c":true}]}],"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.999999940162,0.999999940162,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[1.735,15.001],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Cheek R","parent":6,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[-120.222,-184.444,0],"to":[-0.667,-0.5,0],"ti":[0.667,0.5,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[-124.222,-187.444,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[-124.222,-187.444,0],"to":[0.667,0.5,0],"ti":[-0.667,-0.5,0]},{"t":40.0000016292334,"s":[-120.222,-184.444,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100.525,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-8.448],[8.448,0],[0,8.448],[-8.448,0]],"o":[[0,8.448],[-8.448,0],[0,-8.448],[8.448,0]],"v":[[15.297,0],[0,15.297],[-15.297,0],[0,-15.297]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[175.074,155.195],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Cheek L","parent":7,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[-117.778,-183.444,0],"to":[-1.833,-2.333,0],"ti":[1.833,2.333,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[-128.778,-197.444,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[-128.778,-197.444,0],"to":[1.833,2.333,0],"ti":[-1.833,-2.333,0]},{"t":40.0000016292334,"s":[-117.778,-183.444,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-8.448],[8.448,0],[0,8.448],[-8.448,0]],"o":[[0,8.448],[-8.448,0],[0,-8.448],[8.448,0]],"v":[[15.297,0],[0,15.297],[-15.297,0],[0,-15.297]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[59.35,155.195],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Eye R","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":20,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":23,"s":[0]},{"t":25.0000010182709,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[255,269,0],"to":[-5.667,-0.833,0],"ti":[5.667,0.833,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[221,264,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[221,264,0],"to":[5.667,0.833,0],"ti":[-5.667,-0.833,0]},{"t":40.0000016292334,"s":[255,269,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.571],[2.571,0],[0,2.571],[-2.572,0]],"o":[[0,2.571],[-2.572,0],[0,-2.571],[2.571,0]],"v":[[4.656,-0.001],[0.001,4.656],[-4.656,-0.001],[0.001,-4.656]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.090666497922,0.198067863315,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[46.066,-65.883],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"Eye L","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":20,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":23,"s":[0]},{"t":25.0000010182709,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[255,269,0],"to":[-3.333,-2.167,0],"ti":[3.333,2.167,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[235,256,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[235,256,0],"to":[3.333,2.167,0],"ti":[-3.333,-2.167,0]},{"t":40.0000016292334,"s":[255,269,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[100,100,100]},{"t":40.0000016292334,"s":[100,100,100]}],"ix":6,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.571],[2.572,0],[0,2.571],[-2.571,0]],"o":[[0,2.571],[-2.571,0],[0,-2.571],[2.572,0]],"v":[[4.656,0],[-0.001,4.656],[-4.656,0],[-0.001,-4.656]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.090666497922,0.198067863315,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-52.008,-67.158],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"Face","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[7]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":25,"s":[7]},{"t":40.0000016292334,"s":[0]}],"ix":10,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[248,126,0],"to":[0.667,-1,0],"ti":[-0.667,1,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[252,120,0],"to":[0,0,0],"ti":[0,0,0]},{"t":25.0000010182709,"s":[252,120,0]}],"ix":2},"a":{"a":0,"k":[-1,-154,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-68.31],[44.92,1.23],[0,68.309],[-84.316,0.867]],"o":[[0,68.309],[-44.92,-1.231],[0,-68.309],[97.518,-1.003]],"v":[[90.432,11.344],[-1.255,131.952],[-96.634,7.652],[-0.884,-133.173]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.940450391582,0.354636368097,0.180323597029,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[2.469,-49.857],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"Ear R","parent":8,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[2,-9,0],"to":[0.087,-2.026,0],"ti":[-0.087,2.026,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[2.523,-21.154,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[2.523,-21.154,0],"to":[-0.087,2.026,0],"ti":[0.087,-2.026,0]},{"t":50.0000020365418,"s":[2,-9,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.163,-29.104],[0,0]],"o":[[0,0],[1.164,29.104],[0,0]],"v":[[-10.368,-23.52],[12.757,0],[-12.795,25.24]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.809,-43.948],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Ear L","parent":8,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[2,-9,0],"to":[1.529,0.148,0],"ti":[-1.529,-0.148,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[11.177,-8.112,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":25,"s":[11.177,-8.112,0],"to":[-1.529,-0.148,0],"ti":[1.529,0.148,0]},{"t":50.0000020365418,"s":[2,-9,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.163,-29.104],[0,0]],"o":[[0,0],[-1.164,29.104],[0,0]],"v":[[10.368,-23.52],[-12.757,0],[12.795,25.24]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-104.385,-44.647],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"Background","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[248,308,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[64.61,64.61,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-162.044,0],[0,-162.044],[162.044,0],[0,162.044]],"o":[[162.044,0],[0,162.044],[-162.044,0],[0,-162.044]],"v":[[0,-293.406],[293.406,0],[0,293.406],[-293.406,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.600000023842,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[6.117,-109.477],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":0,"nm":"Step 2 - Help","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,314,0],"ix":2},"a":{"a":0,"k":[250,300,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":500,"h":600,"ip":0,"op":121.000004928431,"st":0,"bm":0}],"markers":[]}')},3:function(n,e){},"54f8":function(n,e,a){"use strict";a("f0d4")},6688:function(n){n.exports=JSON.parse('{"v":"5.6.5","fr":29.9700012207031,"ip":0,"op":121.000004928431,"w":500,"h":500,"nm":"Intro - Clipped","ddd":0,"assets":[{"id":"comp_0","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Nose","parent":7,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[11]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":20,"s":[11]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[-11]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":40,"s":[-11]},{"t":50.0000020365418,"s":[0]}],"ix":10,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[2,-55,0],"to":[-4.733,-0.258,0],"ti":[4.733,0.258,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[-26.401,-56.55,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[-26.401,-56.55,0],"to":[9.702,-0.476,0],"ti":[-9.702,0.476,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[31.814,-59.407,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[31.814,-59.407,0],"to":[-4.969,0.734,0],"ti":[4.969,-0.734,0]},{"t":50.0000020365418,"s":[2,-55,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[2,-44,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[-2.865,0.932],[0,0]],"o":[[0,0],[0,0],[2.891,0.847],[0,0],[0,0]],"v":[[0.11,-24.049],[-18.29,19.181],[-4.549,23.202],[4.286,23.072],[18.29,18.516]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[2.342,-35.915],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Mouth","parent":7,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[8]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":20,"s":[8]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[-7]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":40,"s":[-7]},{"t":50.0000020365418,"s":[0]}],"ix":10,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[1,1,0],"to":[-5.851,0.215,0],"ti":[5.851,-0.215,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[-34.105,2.288,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[-34.105,2.288,0],"to":[11.803,-0.591,0],"ti":[-11.803,0.591,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[36.715,-1.26,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[36.715,-1.26,0],"to":[-5.953,0.377,0],"ti":[5.953,-0.377,0]},{"t":50.0000020365418,"s":[1,1,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,14,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.047,-8.815],[-13.223,-0.07],[-0.047,8.815],[13.223,0.071]],"o":[[-0.047,8.815],[13.224,0.07],[0.047,-8.816],[-13.223,-0.07]],"v":[[-23.943,-3.673],[-0.086,12.418],[23.943,-3.416],[0.798,-3.54]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.999999940162,0.999999940162,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[1.735,15.001],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Cheek R","parent":5,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[-120.222,-180.444,0],"to":[-0.667,0.833,0],"ti":[0.667,-0.833,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[-124.222,-175.444,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[-124.222,-175.444,0],"to":[1,-1.5,0],"ti":[-1,1.5,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[-118.222,-184.444,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[-118.222,-184.444,0],"to":[-0.333,0.667,0],"ti":[0.333,-0.667,0]},{"t":50.0000020365418,"s":[-120.222,-180.444,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100.525,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-8.448],[8.448,0],[0,8.448],[-8.448,0]],"o":[[0,8.448],[-8.448,0],[0,-8.448],[8.448,0]],"v":[[15.297,0],[0,15.297],[-15.297,0],[0,-15.297]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[175.074,155.195],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Cheek L","parent":6,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[-117.778,-179.444,0],"to":[-1.833,-1,0],"ti":[1.833,1,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[-128.778,-185.444,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[-128.778,-185.444,0],"to":[3.667,0.833,0],"ti":[-3.667,-0.833,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[-106.778,-180.444,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[-106.778,-180.444,0],"to":[-1.833,0.167,0],"ti":[1.833,-0.167,0]},{"t":50.0000020365418,"s":[-117.778,-179.444,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-8.448],[8.448,0],[0,8.448],[-8.448,0]],"o":[[0,8.448],[-8.448,0],[0,-8.448],[8.448,0]],"v":[[15.297,0],[0,15.297],[-15.297,0],[0,-15.297]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[59.35,155.195],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Eye R","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":60,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":63,"s":[0]},{"t":65.0000026475043,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[255,287,0],"to":[-5.667,-0.833,0],"ti":[5.667,0.833,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[221,282,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[221,282,0],"to":[9.167,-1,0],"ti":[-9.167,1,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[276,276,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[276,276,0],"to":[-3.5,1.833,0],"ti":[3.5,-1.833,0]},{"t":50.0000020365418,"s":[255,287,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.571],[2.571,0],[0,2.571],[-2.572,0]],"o":[[0,2.571],[-2.572,0],[0,-2.571],[2.571,0]],"v":[[4.656,-0.001],[0.001,4.656],[-4.656,-0.001],[0.001,-4.656]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.090666497922,0.198067863315,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[46.066,-65.883],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Eye L","sr":1,"ks":{"o":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":60,"s":[100]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":63,"s":[0]},{"t":65.0000026475043,"s":[100]}],"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[255,287,0],"to":[-3.333,-2.167,0],"ti":[3.333,2.167,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[235,274,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[235,274,0],"to":[8.333,1.167,0],"ti":[-8.333,-1.167,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[285,281,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[285,281,0],"to":[-5,1,0],"ti":[5,-1,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":50,"s":[255,287,0],"to":[0,0,0],"ti":[0,0,0]},{"t":60.0000024438501,"s":[255,287,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[100,100,100]},{"t":50.0000020365418,"s":[100,100,100]}],"ix":6,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.571],[2.572,0],[0,2.571],[-2.571,0]],"o":[[0,2.571],[-2.571,0],[0,-2.571],[2.572,0]],"v":[[4.656,0],[-0.001,4.656],[-4.656,0],[-0.001,-4.656]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.090666497922,0.198067863315,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-52.008,-67.158],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"Face","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[7]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":20,"s":[7]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":30,"s":[-5]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":40,"s":[-5]},{"t":49.0000019958109,"s":[0]}],"ix":10,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"p":{"a":0,"k":[248,142,0],"ix":2},"a":{"a":0,"k":[-1,-154,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-68.31],[44.92,1.23],[0,68.309],[-84.316,0.867]],"o":[[0,68.309],[-44.92,-1.231],[0,-68.309],[97.518,-1.003]],"v":[[90.432,11.344],[-1.255,131.952],[-96.634,7.652],[-0.884,-133.173]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.940450391582,0.354636368097,0.180323597029,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[2.469,-49.857],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"Ear R","parent":7,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[2,-9,0],"to":[0.087,-2.026,0],"ti":[-0.087,2.026,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[2.523,-21.154,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[2.523,-21.154,0],"to":[-1.294,1.358,0],"ti":[1.294,-1.358,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[-5.239,-13.008,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[-5.239,-13.008,0],"to":[1.206,0.668,0],"ti":[-1.206,-0.668,0]},{"t":50.0000020365418,"s":[2,-9,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.163,-29.104],[0,0]],"o":[[0,0],[1.164,29.104],[0,0]],"v":[[-10.368,-23.52],[12.757,0],[-12.795,25.24]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.809,-43.948],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"Ear L","parent":7,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[2,-9,0],"to":[1.529,0.148,0],"ti":[-1.529,-0.148,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":10,"s":[11.177,-8.112,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":20,"s":[11.177,-8.112,0],"to":[-1.436,-0.795,0],"ti":[1.436,0.795,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":30,"s":[2.56,-12.881,0],"to":[0,0,0],"ti":[0,0,0]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":40,"s":[2.56,-12.881,0],"to":[-0.093,0.647,0],"ti":[0.093,-0.647,0]},{"t":50.0000020365418,"s":[2,-9,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.163,-29.104],[0,0]],"o":[[0,0],[-1.164,29.104],[0,0]],"v":[[10.368,-23.52],[-12.757,0],[12.795,25.24]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-104.385,-44.647],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":4,"nm":"Background","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[248,308,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[64.61,64.61,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-162.044,0],[0,-162.044],[162.044,0],[0,162.044]],"o":[[162.044,0],[0,162.044],[-162.044,0],[0,-162.044]],"v":[[0,-293.406],[293.406,0],[0,293.406],[-293.406,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.600000023842,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[6.117,-109.477],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":0,"nm":"Intro","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[246,320,0],"ix":2},"a":{"a":0,"k":[250,300,0],"ix":1},"s":{"a":0,"k":[118.667,118.667,100],"ix":6}},"ao":0,"w":500,"h":600,"ip":0,"op":121.000004928431,"st":0,"bm":0}],"markers":[]}')},"77f2":function(n,e,a){},8469:function(n){n.exports=JSON.parse('{"v":"5.6.5","fr":29.9700012207031,"ip":0,"op":20.0000008146167,"w":300,"h":300,"nm":"Success","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Check","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[153.5,147.5,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[136,136,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[-13.486,17.672]],"o":[[17.5,20.5],[0,0],[0,0]],"v":[[-49,-4],[-14,37],[44,-39]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":12,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":7.00000028511585,"s":[0]}],"ix":1,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":7,"s":[0]},{"t":14.0000005702317,"s":[100]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Circle","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[10,10,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":3,"s":[5,5,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":9,"s":[110,110,100]},{"t":12.00000048877,"s":[100,100,100]}],"ix":6,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[270.547,270.547],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[0.086274512112,0.749019622803,0.623529434204,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-0.727,-0.727],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0}],"markers":[]}')},"85ec":function(n,e,a){},"874a":function(n){n.exports=JSON.parse('{"v":"5.6.5","fr":29.9700012207031,"ip":0,"op":121.000004928431,"w":500,"h":500,"nm":"Step 1 - Help - Clipped","ddd":0,"assets":[{"id":"comp_0","layers":[{"ddd":0,"ind":1,"ty":4,"nm":"Shape Layer 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,300,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[226.664,283.281],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":6,"ix":5},"lc":1,"lj":1,"ml":4,"bm":0,"d":[{"n":"d","nm":"dash","v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":10,"s":[10]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":28,"s":[1061]},{"t":60.0000024438501,"s":[1061]}],"ix":1,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"}},{"n":"o","nm":"offset","v":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":60.0000024438501,"s":[272]}],"ix":7}}],"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[1.191,-59.555],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[120.159,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"Nose","parent":8,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"p":{"a":0,"k":[2,-55,0],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[2,-44,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[0,0],[0,0],[-2.865,0.932],[0,0]],"o":[[0,0],[0,0],[2.891,0.847],[0,0],[0,0]],"v":[[0.11,-24.049],[-18.29,19.181],[-4.549,23.202],[4.286,23.072],[18.29,18.516]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[2.342,-35.915],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 6","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Mouth","parent":8,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"p":{"a":0,"k":[1,1,0],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,14,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0.047,-8.815],[-13.223,-0.07],[-0.047,8.815],[13.223,0.071]],"o":[[-0.047,8.815],[13.224,0.07],[0.047,-8.816],[-13.223,-0.07]],"v":[[-23.943,-3.673],[-0.086,12.418],[23.943,-3.416],[0.798,-3.54]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.999999940162,0.999999940162,1,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[1.735,15.001],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 3","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":4,"ty":4,"nm":"Cheek R","parent":6,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-120.222,-180.444,0],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100.525,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-8.448],[8.448,0],[0,8.448],[-8.448,0]],"o":[[0,8.448],[-8.448,0],[0,-8.448],[8.448,0]],"v":[[15.297,0],[0,15.297],[-15.297,0],[0,-15.297]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[175.074,155.195],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":5,"ty":4,"nm":"Cheek L","parent":7,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[-117.778,-179.444,0],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-8.448],[8.448,0],[0,8.448],[-8.448,0]],"o":[[0,8.448],[-8.448,0],[0,-8.448],[8.448,0]],"v":[[15.297,0],[0,15.297],[-15.297,0],[0,-15.297]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[59.35,155.195],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 2","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":6,"ty":4,"nm":"Eye R","parent":8,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[6,-9,0],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.571],[2.571,0],[0,2.571],[-2.572,0]],"o":[[0,2.571],[-2.572,0],[0,-2.571],[2.571,0]],"v":[[4.656,-0.001],[0.001,4.656],[-4.656,-0.001],[0.001,-4.656]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.090666497922,0.198067863315,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[46.066,-65.883],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 4","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":7,"ty":4,"nm":"Eye L","parent":8,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[6,-9,0],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-2.571],[2.572,0],[0,2.571],[-2.571,0]],"o":[[0,2.571],[-2.571,0],[0,-2.571],[2.572,0]],"v":[[4.656,0],[-0.001,4.656],[-4.656,0],[-0.001,-4.656]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0,0.090666497922,0.198067863315,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-52.008,-67.158],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 5","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":8,"ty":4,"nm":"Face","parent":11,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[16]},{"t":10.0000004073083,"s":[0]}],"ix":10,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutBack(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_div(c, 2), $bm_mul($bm_mul(t, t), $bm_sub($bm_mul($bm_sum(s *= 1.525, 1), t), s))), b);\\n    return $bm_sum($bm_mul($bm_div(c, 2), $bm_sum($bm_mul($bm_mul(t -= 2, t), $bm_sum($bm_mul($bm_sum(s *= 1.525, 1), t), s)), 2)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutBack(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutBack(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutBack(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutBack(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[102.5,233,0],"to":[2.333,0,0],"ti":[-2.333,0,0]},{"t":10.0000004073083,"s":[116.5,233,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutBack(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_div(c, 2), $bm_mul($bm_mul(t, t), $bm_sub($bm_mul($bm_sum(s *= 1.525, 1), t), s))), b);\\n    return $bm_sum($bm_mul($bm_div(c, 2), $bm_sum($bm_mul($bm_mul(t -= 2, t), $bm_sum($bm_mul($bm_sum(s *= 1.525, 1), t), s)), 2)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutBack(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutBack(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutBack(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutBack(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[-1,62,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,-68.31],[44.92,1.23],[0,68.309],[-84.316,0.867]],"o":[[0,68.309],[-44.92,-1.231],[0,-68.309],[97.518,-1.003]],"v":[[90.432,11.344],[-1.255,131.952],[-96.634,7.652],[-0.884,-133.173]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.940450391582,0.354636368097,0.180323597029,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[2.469,-49.857],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 7","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":9,"ty":4,"nm":"Ear R","parent":8,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[2,-9,0],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-1.163,-29.104],[0,0]],"o":[[0,0],[1.164,29.104],[0,0]],"v":[[-10.368,-23.52],[12.757,0],[-12.795,25.24]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[99.809,-43.948],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 9","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":10,"ty":4,"nm":"Ear L","parent":8,"sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[2,-9,0],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[1.163,-29.104],[0,0]],"o":[[0,0],[-1.164,29.104],[0,0]],"v":[[10.368,-23.52],[-12.757,0],[12.795,25.24]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[0.914606610466,0.159194886451,0.055813235863,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-104.385,-44.647],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Group 8","np":4,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":11,"ty":3,"nm":"Neck","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[11]},{"t":10.0000004073083,"s":[0]}],"ix":10,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutBack(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_div(c, 2), $bm_mul($bm_mul(t, t), $bm_sub($bm_mul($bm_sum(s *= 1.525, 1), t), s))), b);\\n    return $bm_sum($bm_mul($bm_div(c, 2), $bm_sum($bm_mul($bm_mul(t -= 2, t), $bm_sum($bm_mul($bm_sum(s *= 1.525, 1), t), s)), 2)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutBack(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutBack(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutBack(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutBack(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"p":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[250,461,0],"to":[0,0,0],"ti":[0,0,0]},{"t":10.0000004073083,"s":[250,461,0]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutBack(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_div(c, 2), $bm_mul($bm_mul(t, t), $bm_sub($bm_mul($bm_sum(s *= 1.525, 1), t), s))), b);\\n    return $bm_sum($bm_mul($bm_div(c, 2), $bm_sum($bm_mul($bm_mul(t -= 2, t), $bm_sum($bm_mul($bm_sum(s *= 1.525, 1), t), s)), 2)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutBack(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutBack(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutBack(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutBack(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"a":{"a":0,"k":[117.5,342,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"hasMask":true,"masksProperties":[{"inv":false,"mode":"a","pt":{"a":1,"k":[{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":0,"s":[{"i":[[81.992,2.072],[13.532,-94.953],[-64.484,-1.629],[-9.349,65.601]],"o":[[-95.882,-2.423],[-9.101,63.86],[66.243,1.674],[11.571,-81.198]],"v":[[120,-13],[-79.802,194.054],[73.7,311.887],[239.44,202.121]],"c":true}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":3,"s":[{"i":[[79.812,-8.71],[10.053,-100.509],[-55.73,6.082],[-6.165,61.633]],"o":[[-100.415,10.958],[-5.58,55.783],[61.575,-6.72],[7.991,-79.888]],"v":[[120,-13],[-60.154,230.665],[87.59,311.021],[235.404,198.412]],"c":true}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":7,"s":[{"i":[[87.663,8.519],[3.496,-81.264],[-78.641,-7.642],[-3.321,77.19]],"o":[[-80.958,-7.867],[-3.396,78.939],[76.899,7.473],[3.786,-87.995]],"v":[[120,-13],[-65.131,145.969],[106.11,309.866],[299.005,181.355]],"c":true}]},{"i":{"x":0.833,"y":0.833},"o":{"x":0.167,"y":0.167},"t":8,"s":[{"i":[[86.292,6.251],[2.335,-81.34],[-81.03,-5.87],[-2.278,79.339]],"o":[[-81.161,-5.88],[-2.331,81.208],[79.164,5.735],[2.483,-86.483]],"v":[[120,-13],[-67.492,143.337],[110.74,309.577],[303.828,170.237]],"c":true}]},{"t":10.0000004073083,"s":[{"i":[[83.9,0],[0,-83.9],[-83.9,0],[0,83.9]],"o":[[-83.9,0],[0,83.9],[83.9,0],[0,-83.9]],"v":[[120,-13],[-73.474,148],[120,309],[313.474,148]],"c":true}]}],"ix":1},"o":{"a":0,"k":100,"ix":3},"x":{"a":0,"k":0,"ix":4},"nm":"Mask 1"}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":12,"ty":4,"nm":"Background","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[248,308,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[64.61,64.61,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[-162.044,0],[0,-162.044],[162.044,0],[0,162.044]],"o":[[162.044,0],[0,162.044],[-162.044,0],[0,-162.044]],"v":[[0,-293.406],[293.406,0],[0,293.406],[-293.406,0]],"c":true},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.600000023842,0,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[6.117,-109.477],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":3,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0}]}],"layers":[{"ddd":0,"ind":1,"ty":0,"nm":"Step 1 - Help","refId":"comp_0","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[250,314,0],"ix":2},"a":{"a":0,"k":[250,300,0],"ix":1},"s":{"a":0,"k":[100,100,100],"ix":6}},"ao":0,"w":500,"h":600,"ip":0,"op":121.000004928431,"st":0,"bm":0}],"markers":[]}')},b269:function(n,e,a){"use strict";a("77f2")},cd49:function(n,e,a){"use strict";a.r(e);a("e260"),a("e6cf"),a("cca6"),a("a79d");var t=a("2b0e"),i=function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("div",{attrs:{id:"app"}},[1===n.step?a("Welcome",{attrs:{ready:n.mediaStreamReady},on:{"challenge-details":function(e){return n.onChallengeDetails(e)},error:function(e){return n.onError(e)}}}):2===n.step?a("Challenge",{attrs:{details:n.challengeDetails},on:{"local-success":function(e){return n.onLocalSuccess(e)},"local-fail":function(e){return n.onLocalFail()},error:function(e){return n.onError(e)}}}):3===n.step?a("Spinner"):4===n.step?a("Result",{attrs:{success:n.success},on:{restart:function(e){return n.onRestart()}}}):-1===n.step?a("Error",{attrs:{message:n.errorMessage},on:{restart:function(e){return n.onRestart()}}}):n._e()],1)},s=[],r=(a("b0c0"),function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("div",{staticClass:"videoContainer mx-auto",style:n.cssVars},[a("video",{class:{rotate:n.shouldRotate},attrs:{id:"webcamVideo",width:n.videoWidth,height:n.videoHeight,autoplay:"",muted:"",playsinline:""},domProps:{muted:!0}}),a("canvas",{class:{rotate:n.shouldRotate},attrs:{id:"overlayCanvas",width:n.videoWidth,height:n.videoHeight}}),a("div",{staticClass:"helpContainer clearfix"},[a("div",{staticClass:"float-left messageContainer"},[a("div",{staticClass:"message"},[a("h5",[n._v("User Id: "+n._s(n.userId))]),a("h5",{attrs:{token:n.user.token}},[n._v("Token: "+n._s(n.user))])])])]),a("div",{staticClass:"helpContainer clearfix"},[a("div",{staticClass:"float-left messageContainer"},[a("div",{staticClass:"message"},[a("h5",[n._v(n._s(n.message))])])]),a("div",{staticClass:"float-right"},[a("lottie",{directives:[{name:"show",rawName:"v-show",value:1===n.animation,expression:"animation === 1"}],attrs:{options:n.lottieOptions1,height:100,width:100}}),a("lottie",{directives:[{name:"show",rawName:"v-show",value:2===n.animation,expression:"animation === 2"}],attrs:{options:n.lottieOptions2,height:100,width:100}})],1)])])}),m=[],u=a("8c2c"),l=a("874a"),d=a("2d1f"),k=a("d4ec"),b=a("bee2"),y=(a("99af"),a("ab39")),o=a("1864"),v=a.n(o),c=function(){function n(e,a){Object(k["a"])(this,n),this.challengeDetails=e,this.canvasElement=a}return Object(b["a"])(n,[{key:"draw",value:function(n){if(n.faceDrawBoxOptions){var e={x:this.challengeDetails.areaLeft,y:this.challengeDetails.areaTop,width:this.challengeDetails.areaWidth,height:this.challengeDetails.areaHeight};this.drawArea(e,n.faceDrawBoxOptions)}if(n.noseDrawBoxOptions){var a={x:this.challengeDetails.noseLeft,y:this.challengeDetails.noseTop,width:this.challengeDetails.noseWidth,height:this.challengeDetails.noseHeight};this.drawArea(a,n.noseDrawBoxOptions)}}},{key:"drawArea",value:function(n,e){var a=new y["c"].DrawBox(n,e);a.draw(this.canvasElement)}}]),n}();c.COLOR_RED="rgba(255, 0, 0, 1)",c.COLOR_GREEN="rgba(0, 255, 0, 1)",c.COLOR_YELLOW="rgba(255, 255, 0, 1)";a("d3b7"),a("3ca3"),a("ddb0"),a("ac1f"),a("5319");var _=a("bc3a"),x=a.n(_),f=(a("b64b"),a("4ec9"),a("159b"),a("c1f9"),a("498a"),a("ec26")),p=function(){function n(){Object(k["a"])(this,n)}return Object(b["a"])(n,null,[{key:"loadConfig",value:function(){var e=Object.keys(Object({NODE_ENV:"production",VUE_APP_DRAW_DETECTIONS:"false",VUE_APP_PROFILING:"false",VUE_APP_API_URL:"https://7kuo9le6q5.execute-api.us-east-2.amazonaws.com/Prod/challenge/",VUE_APP_API_START_ENDPOINT:"start",VUE_APP_API_FRAMES_ENDPOINT_PATTERN:"{challengeId}/frames",VUE_APP_API_VERIFY_ENDPOINT_PATTERN:"{challengeId}/verify",VUE_APP_IMAGE_WIDTH:"640",VUE_APP_IMAGE_HEIGHT:"480",VUE_APP_IMAGE_JPG_QUALITY:"0.7",VUE_APP_STATE_AREA_DURATION_IN_SECONDS:"60",VUE_APP_STATE_NOSE_DURATION_IN_SECONDS:"30",VUE_APP_STATE_AREA_MAX_FRAMES_WITHOUT_FACE:"2",VUE_APP_STATE_NOSE_MAX_FRAMES_WITHOUT_FACE:"4",VUE_APP_MAX_FPS:"36",VUE_APP_FACE_AREA_TOLERANCE_PERCENT:"15",VUE_APP_FLIP_VIDEO:"true",VUE_APP_LANDMARK_INDEX:"30",BASE_URL:"/"})),a=new Map;e.forEach((function(e){var t=e.replace(n.KEY_PREFIX,""),i=Object({NODE_ENV:"production",VUE_APP_DRAW_DETECTIONS:"false",VUE_APP_PROFILING:"false",VUE_APP_API_URL:"https://7kuo9le6q5.execute-api.us-east-2.amazonaws.com/Prod/challenge/",VUE_APP_API_START_ENDPOINT:"start",VUE_APP_API_FRAMES_ENDPOINT_PATTERN:"{challengeId}/frames",VUE_APP_API_VERIFY_ENDPOINT_PATTERN:"{challengeId}/verify",VUE_APP_IMAGE_WIDTH:"640",VUE_APP_IMAGE_HEIGHT:"480",VUE_APP_IMAGE_JPG_QUALITY:"0.7",VUE_APP_STATE_AREA_DURATION_IN_SECONDS:"60",VUE_APP_STATE_NOSE_DURATION_IN_SECONDS:"30",VUE_APP_STATE_AREA_MAX_FRAMES_WITHOUT_FACE:"2",VUE_APP_STATE_NOSE_MAX_FRAMES_WITHOUT_FACE:"4",VUE_APP_MAX_FPS:"36",VUE_APP_FACE_AREA_TOLERANCE_PERCENT:"15",VUE_APP_FLIP_VIDEO:"true",VUE_APP_LANDMARK_INDEX:"30",BASE_URL:"/"})[e];a.set(t,i)})),window.config=Object.fromEntries(a)}},{key:"getConfig",value:function(){return window.config}},{key:"getConfigBooleanValue",value:function(e){return"true"===n.getConfig()[e].trim().toLowerCase()}},{key:"isProfiling",value:function(){return n.getConfigBooleanValue("PROFILING")}},{key:"configureLogger",value:function(){v.a.useDefaults(),v.a.setLevel(v.a.OFF),window.Logger=v.a}},{key:"loadMediaStream",value:function(e,a){var t={audio:!1,video:{width:parseInt(n.getConfig().IMAGE_WIDTH),height:parseInt(n.getConfig().IMAGE_HEIGHT),facingMode:"user"}};navigator.mediaDevices.getUserMedia(t).then((function(n){try{var t={mediaStream:n,actualHeight:n.getVideoTracks()[0].getSettings().height,actualWidth:n.getVideoTracks()[0].getSettings().width};v.a.info("media info: actualHeight=".concat(t.actualHeight," actualWidth=").concat(t.actualWidth)),window.mediaStreamInfo=t}catch(i){v.a.error(i),a("Error getting video actual sizes")}e()})).catch((function(n){v.a.error(n),a("Error getting access to the camera")}))}},{key:"getMediaStreamInfo",value:function(){return window.mediaStreamInfo}},{key:"getUserId",value:function(){var n=window.localStorage.getItem("userId");return null===n&&(n=Object(f["a"])(),window.localStorage.setItem("userId",n)),v.a.info("userId=".concat(n)),n}},{key:"getUserDetails",value:function(){var n=window.localStorage.getItem("challengeDetails");return v.a.info("Token=".concat(n)),n}}]),n}();p.KEY_PREFIX="VUE_APP_";var h=function(){function n(e,a,t){Object(k["a"])(this,n),this.challengeId=e,this.token=a,this.videoElement=t,this.promises=[],this.invisibleCanvas=document.createElement("canvas"),this.invisibleCanvas.width=this.videoElement.width,this.invisibleCanvas.height=this.videoElement.height}return Object(b["a"])(n,[{key:"uploadFrame",value:function(){var e=this.invisibleCanvas.getContext("2d");if(null===e)throw"Error getting canvas context";e.drawImage(this.videoElement,0,0,this.videoElement.width,this.videoElement.height),p.getConfigBooleanValue("FLIP_VIDEO")&&e.scale(-1,1);var a=this.invisibleCanvas,t=this;this.promises.push(new Promise((function(e,i){a.toBlob((function(a){null===a?i(new Error("Error creating blob from canvas")):n.callFramesApi(t.challengeId,t.token,a,e,i)}),"image/jpeg",parseFloat(p.getConfig().IMAGE_JPG_QUALITY))})))}},{key:"verify",value:function(n,e){v.a.debug(this.promises);var a=this;Promise.all(this.promises).then((function(){v.a.info("all frames uploaded");var t={token:a.token};a.callVerificationApi(t,n,e)}))}},{key:"callVerificationApi",value:function(n,e,a){var t=p.getConfig().API_VERIFY_ENDPOINT_PATTERN.replace("{challengeId}",this.challengeId),i=p.getConfig().API_URL+t;v.a.info("calling ".concat(i)),v.a.info(n);var s=x.a.post(i,n);s.then((function(n){v.a.info(n);var a=n.data;v.a.info(a),e(a.success)})).catch((function(n){v.a.error(n),a(n)}))}}],[{key:"callFramesApi",value:function(n,e,a,t,i){v.a.info("uploading frame");var s=new FileReader;s.readAsDataURL(a),s.onloadend=function(){var a=p.getConfig().API_FRAMES_ENDPOINT_PATTERN.replace("{challengeId}",n),r=p.getConfig().API_URL+a;v.a.info("calling ".concat(r));var m=s.result,u={timestamp:Date.now(),frameBase64:m.substr(m.indexOf(",")+1),token:e};v.a.info(u);var l=x.a.put(r,u);l.then((function(e){v.a.info(e);var a=e.data;v.a.info(a),v.a.info(n),v.a.info("frame successfully uploaded"),t()})).catch((function(n){v.a.error(n),i(n)}))}}}]),n}(),$=a("262e"),z=a("2caf"),g=function(){function n(e){Object(k["a"])(this,n),this.challengeDetails=e}return Object(b["a"])(n,[{key:"process",value:function(n){return{}}},{key:"getMaximumDurationInSeconds",value:function(){return-1}},{key:"isFaceBoxInsideFaceArea",value:function(n){var e=!(arguments.length>1&&void 0!==arguments[1])||arguments[1],a=e?parseInt(p.getConfig().FACE_AREA_TOLERANCE_PERCENT)/100:0;return n.x>=this.challengeDetails.areaLeft*(1-a)&&n.y>=this.challengeDetails.areaTop*(1-a)&&n.x+n.width<=this.challengeDetails.areaLeft+this.challengeDetails.areaWidth*(1+a)&&n.y+n.height<=this.challengeDetails.areaTop+this.challengeDetails.areaHeight*(1+a)}},{key:"isNoseInsideNoseArea",value:function(n){return n.x>=this.challengeDetails.noseLeft&&n.y>=this.challengeDetails.noseTop&&n.x<=this.challengeDetails.noseLeft+this.challengeDetails.noseWidth&&n.y<=this.challengeDetails.noseTop+this.challengeDetails.noseHeight}}]),n}(),w=function(n){Object($["a"])(a,n);var e=Object(z["a"])(a);function a(){return Object(k["a"])(this,a),e.apply(this,arguments)}return Object(b["a"])(a,[{key:"getName",value:function(){return a.NAME}}]),a}(g);w.NAME="FailState";var A=function(n){Object($["a"])(a,n);var e=Object(z["a"])(a);function a(){return Object(k["a"])(this,a),e.apply(this,arguments)}return Object(b["a"])(a,[{key:"getName",value:function(){return a.NAME}}]),a}(g);A.NAME="SuccessState";var Y=function(n){Object($["a"])(a,n);var e=Object(z["a"])(a);function a(){var n;return Object(k["a"])(this,a),n=e.apply(this,arguments),n.framesWithoutFace=0,n.landmarkIndex=parseInt(p.getConfig().LANDMARK_INDEX),n}return Object(b["a"])(a,[{key:"process",value:function(n){var e=this;1===n.length?this.isFaceBoxInsideFaceArea(n[0].detection.box)?this.isNoseInsideNoseArea(n[0].landmarks.positions[this.landmarkIndex])&&(e=new A(this.challengeDetails)):(v.a.info("NoseState fail: isFaceBoxInsideFaceArea=".concat(this.isFaceBoxInsideFaceArea(n[0].detection.box))),e=new w(this.challengeDetails)):0!==n.length||++this.framesWithoutFace>parseInt(p.getConfig().STATE_NOSE_MAX_FRAMES_WITHOUT_FACE)?(v.a.info("NoseState fail: #faces=".concat(n.length," framesWithoutFace=").concat(this.framesWithoutFace)),e=new w(this.challengeDetails)):v.a.debug("no face detected. Skipping frame...");var a={faceDrawBoxOptions:{boxColor:c.COLOR_GREEN},noseDrawBoxOptions:{boxColor:c.COLOR_YELLOW}};return{nextState:e,drawOptions:a,helpMessage:"Move the tip of your nose inside the yellow area",helpAnimationNumber:2}}},{key:"getMaximumDurationInSeconds",value:function(){return parseInt(p.getConfig().STATE_NOSE_DURATION_IN_SECONDS)}},{key:"getName",value:function(){return a.NAME}}]),a}(g);Y.NAME="NoseState";var O=function(n){Object($["a"])(a,n);var e=Object(z["a"])(a);function a(){var n;return Object(k["a"])(this,a),n=e.apply(this,arguments),n.framesWithoutFace=0,n}return Object(b["a"])(a,[{key:"process",value:function(n){var e=this,a=c.COLOR_RED;1===n.length?this.isFaceBoxInsideFaceArea(n[0].detection.box,!1)&&(a=c.COLOR_GREEN,e=new Y(this.challengeDetails)):0!==n.length||++this.framesWithoutFace>parseInt(p.getConfig().STATE_AREA_MAX_FRAMES_WITHOUT_FACE)?(v.a.info("AreaState fail: #faces=".concat(n.length," framesWithoutFace=").concat(this.framesWithoutFace)),e=new w(this.challengeDetails)):v.a.debug("no face detected. Skipping frame...");var t={faceDrawBoxOptions:{boxColor:a}};return{nextState:e,drawOptions:t,helpMessage:"Center your face inside the area",helpAnimationNumber:1}}},{key:"getMaximumDurationInSeconds",value:function(){return parseInt(p.getConfig().STATE_AREA_DURATION_IN_SECONDS)}},{key:"getName",value:function(){return a.NAME}}]),a}(g);O.NAME="AreaState";var E=function(n){Object($["a"])(a,n);var e=Object(z["a"])(a);function a(){return Object(k["a"])(this,a),e.apply(this,arguments)}return Object(b["a"])(a,[{key:"process",value:function(n){var e=this,a=void 0;switch(n.length){case 0:a="No face detected. Look at the camera.";break;case 1:e=new O(this.challengeDetails);break;default:a="More than one face detected. Should be one."}var t={faceDrawBoxOptions:{boxColor:c.COLOR_RED}};return{nextState:e,drawOptions:t,helpMessage:a}}},{key:"getName",value:function(){return a.NAME}}]),a}(g);E.NAME="FaceState";var X=function(){function n(e){Object(k["a"])(this,n),this.challengeDetails=e,this.changeCurrentState(new E(this.challengeDetails))}return Object(b["a"])(n,[{key:"process",value:function(n){v.a.debug("current state: ".concat(this.currentState.getName())),this.endTime>0&&Date.now()/1e3>this.endTime&&(v.a.info("fail: state timed out"),this.changeCurrentState(new w(this.challengeDetails)));var e=this.currentState.process(n);e.nextState&&this.changeCurrentState(e.nextState);var a,t=!1,i=!1;return this.currentState.getName()===A.NAME?(t=!0,a=!0,i=!0):this.currentState.getName()===w.NAME?(t=!0,a=!1):this.currentState.getName()===Y.NAME&&(i=!0),{end:t,success:a,shouldSaveFrame:i,drawOptions:e.drawOptions,helpMessage:e.helpMessage,helpAnimationNumber:e.helpAnimationNumber}}},{key:"changeCurrentState",value:function(n){this.currentState!==n&&(this.currentState=n,this.endTime=-1!=n.getMaximumDurationInSeconds()?Date.now()/1e3+n.getMaximumDurationInSeconds():-1)}}]),n}(),Z=function(){function n(e,a,t,i,s,r){if(Object(k["a"])(this,n),this.endCallback=i,this.helpMessageCallback=s,this.helpAnimatonCallback=r,this.stateManager=new X(e),this.videoElement=document.getElementById(a),!this.videoElement)throw"Video element not found";if(this.remoteVerifier=new h(e.id,e.token,this.videoElement),this.canvasElement=document.getElementById(t),!this.canvasElement)throw"Canvas element not found";this.drawer=new c(e,this.canvasElement),this.videoElement.srcObject=p.getMediaStreamInfo().mediaStream;var m=this;m.videoElement.addEventListener("loadedmetadata",(function(){n.process(m)}))}return Object(b["a"])(n,null,[{key:"loadModels",value:function(){p.isProfiling()&&(v.a.time("faceDetectionModelLoad"),v.a.time("faceLandmarkModelLoad"));var n=[],e="/weights/";n.push(this.loadFaceDetectionModel(e)),n.push(this.loadLandmarkModel(e)),window.modelPromises=n}},{key:"loadFaceDetectionModel",value:function(n){var e=y["e"].tinyFaceDetector.load(n);return e.then((function(){p.isProfiling()&&v.a.timeEnd("faceDetectionModelLoad"),v.a.info("tinyFaceDetector model loaded")})),e}},{key:"loadLandmarkModel",value:function(n){var e=y["e"].faceLandmark68Net.load(n);return e.then((function(){p.isProfiling()&&v.a.timeEnd("faceLandmarkModelLoad"),v.a.info("faceLandmark68Net model loaded")})),e}},{key:"process",value:function(e){if(v.a.debug("video event handler"),e.videoElement.paused||e.videoElement.ended)return v.a.debug("video paused or ended"),setTimeout((function(){return n.process(e)}),15);p.isProfiling()&&v.a.time("faceDetectionWithFaceLandmarks");var a=new y["a"];y["b"](e.videoElement,a).withFaceLandmarks(!1).then((function(a){p.isProfiling()&&v.a.timeEnd("faceDetectionWithFaceLandmarks"),a?n.processDetectionResults(e,a):setTimeout((function(){return n.process(e)}))}))}},{key:"processDetectionResults",value:function(e,a){var t=y["d"](e.canvasElement,e.videoElement),i=y["f"](a,t),s=e.stateManager.process(a);if(p.getConfigBooleanValue("DRAW_DETECTIONS")&&(y["c"].drawDetections(e.canvasElement,i),y["c"].drawFaceLandmarks(e.canvasElement,i)),s.drawOptions&&e.drawer.draw(s.drawOptions),s.helpMessage!==e.lastHelpMessage&&(v.a.debug("help message change: from='".concat(e.lastHelpMessage,"' to='").concat(s.helpMessage,"'")),e.helpMessageCallback(s.helpMessage)),e.lastHelpMessage=s.helpMessage,s.helpAnimationNumber!==e.lastHelpAnimationNumber&&(v.a.debug("help animation change: from=".concat(e.lastHelpAnimationNumber," to=").concat(s.helpAnimationNumber)),e.helpAnimatonCallback(s.helpAnimationNumber)),e.lastHelpAnimationNumber=s.helpAnimationNumber,s.shouldSaveFrame&&(v.a.debug("should save frame"),e.remoteVerifier.uploadFrame()),s.end){var r=s.success;r?v.a.info("challenge successfully completed locally"):v.a.info("challenge failed locally"),e.endCallback(r,r?e.remoteVerifier:void 0)}else{var m=1e4/parseInt(p.getConfig().MAX_FPS);setTimeout((function(){return n.process(e)}),m)}}}]),n}(),D=t["a"].extend({name:"Challenge",components:{Lottie:u["a"]},props:{details:Object},data:function(){return{userId:p.getUserId(),message:"Loading...",user:p.getUserDetails(),animation:-1,lottieOptions1:{animationData:l},lottieOptions2:{animationData:d},videoWidth:p.getMediaStreamInfo().actualWidth,videoHeight:p.getMediaStreamInfo().actualHeight,shouldRotate:p.getConfigBooleanValue("FLIP_VIDEO"),cssVars:{"--video-width":p.getMediaStreamInfo().actualWidth+"px","--video-height":p.getMediaStreamInfo().actualHeight+"px","--help-container-padding-top":p.getMediaStreamInfo().actualHeight+5+"px"}}},methods:{onLocalEnd:function(n,e){n?this.$emit("local-success",e):this.$emit("local-fail")},onHelpMessage:function(n){this.message=n||""},onHelpAnimation:function(n){this.animation=n||-1}},mounted:function(){var n=this;this.$nextTick((function(){new Z(n.details,"webcamVideo","overlayCanvas",n.onLocalEnd,n.onHelpMessage,n.onHelpAnimation)}))}}),Q=D,S=(a("b269"),a("2877")),P=Object(S["a"])(Q,r,m,!1,null,"75822c6b",null),V=P.exports,B=function(){var n=this,e=n.$createElement;n._self._c;return n._m(0)},T=[function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("div",{staticClass:"text-center mt-5"},[a("div",{staticClass:"spinner-border big-spinner",attrs:{role:"status"}}),a("h2",{staticClass:"mt-5"},[n._v("Processing...")])])}],G=t["a"].extend({name:"Spinner"}),I=G,F=(a("54f8"),Object(S["a"])(I,B,T,!1,null,"4cdecada",null)),W=F.exports,C=function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("div",{staticClass:"text-center"},[a("lottie",{attrs:{options:n.lottieOptions,height:300,width:300}}),n._m(0),n.loading?a("div",{staticClass:"spinner-border mt-5",attrs:{role:"status"}}):a("button",{staticClass:"btn btn-primary btn-lg mt-5",attrs:{type:"button",disabled:!n.ready},on:{click:function(e){return n.start()}}},[n._v(" Verify now! ")])],1)},N=[function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("h4",{staticClass:"display-4 mt-4"},[a("strong",[n._v("Liveness")]),n._v(" Detection")])}],K=function(){function n(){Object(k["a"])(this,n)}return Object(b["a"])(n,null,[{key:"startChallenge",value:function(n,e){var a=p.getConfig().API_URL+p.getConfig().API_START_ENDPOINT,t={userId:p.getUserId(),imageWidth:p.getMediaStreamInfo().actualWidth,imageHeight:p.getMediaStreamInfo().actualHeight};v.a.info("calling ".concat(a)),v.a.info(t),x.a.post(a,t).then((function(e){v.a.info(e);var a=e.data,t=JSON.stringify(e.data.token);window.localStorage.setItem("challengeDetails",t),v.a.info(a),n(a)})).catch((function(n){v.a.error(n),e(n)}))}}]),n}(),M=a("6688"),R=t["a"].extend({name:"Welcome",components:{Lottie:u["a"]},props:{ready:Boolean},data:function(){return{lottieOptions:{animationData:M,loop:!1},loading:!1}},methods:{start:function(){this.loading=!0;var n=this;K.startChallenge((function(e){Promise.all(window.modelPromises).then((function(){n.$emit("challenge-details",e)}))}),(function(e){n.$emit("error",e)}))}}}),L=R,U=Object(S["a"])(L,C,N,!1,null,"07ed8802",null),j=U.exports,H=function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("div",{staticClass:"text-center"},[a("lottie",{attrs:{options:n.lottieOptions,height:200,width:200}}),a("h2",{staticClass:"mt-4"},[n._v(n._s(n.title))]),a("h3",{staticClass:"mt-2"},[a("small",{staticClass:"text-muted"},[n._v(n._s(n.message))])]),a("button",{staticClass:"btn btn-primary btn-lg mt-5",attrs:{type:"button"},on:{click:function(e){return n.$emit("restart")}}},[n._v(n._s(n.buttonText))])],1)},J=[],q=a("8469"),nn=a("efec"),en="Verified!",an="Successfully verified as a live person.",tn="Start over",sn="Uh-oh.",rn="We could not detect a live person.",mn="Try again",un=t["a"].extend({name:"Result",components:{Lottie:u["a"]},props:{success:Boolean},computed:{title:function(){return this.success?en:sn},message:function(){return this.success?an:rn},buttonText:function(){return this.success?tn:mn},lottieOptions:function(){return{animationData:this.success?q:nn,loop:!1}}}}),ln=un,dn=Object(S["a"])(ln,H,J,!1,null,null,null),kn=dn.exports,bn=function(){var n=this,e=n.$createElement,a=n._self._c||e;return a("div",{staticClass:"text-center"},[a("svg",{staticClass:"bi bi-emoji-frown",attrs:{width:"150px",height:"150px",viewBox:"0 0 16 16",fill:"currentColor",xmlns:"http://www.w3.org/2000/svg"}},[a("path",{attrs:{"fill-rule":"evenodd",d:"M8 15A7 7 0 1 0 8 1a7 7 0 0 0 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"}}),a("path",{attrs:{"fill-rule":"evenodd",d:"M4.285 12.433a.5.5 0 0 0 .683-.183A3.498 3.498 0 0 1 8 10.5c1.295 0 2.426.703 3.032 1.75a.5.5 0 0 0 .866-.5A4.498 4.498 0 0 0 8 9.5a4.5 4.5 0 0 0-3.898 2.25.5.5 0 0 0 .183.683z"}}),a("path",{attrs:{d:"M7 6.5C7 7.328 6.552 8 6 8s-1-.672-1-1.5S5.448 5 6 5s1 .672 1 1.5zm4 0c0 .828-.448 1.5-1 1.5s-1-.672-1-1.5S9.448 5 10 5s1 .672 1 1.5z"}})]),a("h2",{staticClass:"mt-4"},[n._v("Something went wrong")]),a("h3",{staticClass:"mt-2"},[a("small",{staticClass:"text-muted"},[n._v(n._s(n.message))])])])},yn=[],on=t["a"].extend({name:"Error",props:{message:String}}),vn=on,cn=Object(S["a"])(vn,bn,yn,!1,null,null,null),_n=cn.exports;p.loadConfig(),p.configureLogger();var xn=t["a"].extend({name:"App",components:{Welcome:j,Challenge:V,Spinner:W,Result:kn,Error:_n},data:function(){return{challengeDetails:{},success:!1,step:1,mediaStreamReady:!1,errorMessage:""}},methods:{onChallengeDetails:function(n){this.challengeDetails=n,this.step=2},onLocalSuccess:function(n){this.step=3;var e=this;n.verify((function(n){e.success=n,e.step=4}),(function(n){e.onError(n)}))},onLocalFail:function(){this.success=!1,this.step=4},onRestart:function(){this.step=1},onError:function(n){this.errorMessage=n.name+": "+n.message,this.step=-1}},mounted:function(){Z.loadModels();var n=this;p.loadMediaStream((function(){n.mediaStreamReady=!0}),(function(e){n.errorMessage=e,n.step=-1}))}}),fn=xn,pn=(a("034f"),Object(S["a"])(fn,i,s,!1,null,null,null)),hn=pn.exports,$n=a("c894");a("289e");t["a"].use($n["a"]),new t["a"]({render:function(n){return n(hn)}}).$mount("#app"),t["a"].customElement("vue-widget",hn)},efec:function(n){n.exports=JSON.parse('{"v":"5.6.5","fr":29.9700012207031,"ip":0,"op":20.0000008146167,"w":300,"h":300,"nm":"Fail","ddd":0,"assets":[],"layers":[{"ddd":0,"ind":1,"ty":4,"nm":"X 2","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":97,"ix":10},"p":{"a":0,"k":[144,159,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[136,136,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-13.486,17.672]],"o":[[0,0],[0,0]],"v":[[-35.687,34.041],[22.313,-41.959]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":12,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100.105,100.435],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":7.00000028511585,"s":[0]}],"ix":1,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":7,"s":[0]},{"t":14.0000005702317,"s":[100]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":2,"ty":4,"nm":"X 1","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":7,"ix":10},"p":{"a":0,"k":[156.5,156.5,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":0,"k":[136,136,100],"ix":6}},"ao":0,"shapes":[{"ty":"gr","it":[{"ind":0,"ty":"sh","ix":1,"ks":{"a":0,"k":{"i":[[0,0],[-13.486,17.672]],"o":[[0,0],[0,0]],"v":[[-35.687,34.041],[22.313,-41.959]],"c":false},"ix":2},"nm":"Path 1","mn":"ADBE Vector Shape - Group","hd":false},{"ty":"st","c":{"a":0,"k":[1,1,1,1],"ix":3},"o":{"a":0,"k":100,"ix":4},"w":{"a":0,"k":12,"ix":5},"lc":2,"lj":2,"bm":0,"nm":"Stroke 1","mn":"ADBE Vector Graphic - Stroke","hd":false},{"ty":"tr","p":{"a":0,"k":[0,0],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100.105,100.435],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Shape 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false},{"ty":"tm","s":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"t":7.00000028511585,"s":[0]}],"ix":1,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"e":{"a":1,"k":[{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":0,"s":[0]},{"i":{"x":[0.833],"y":[0.833]},"o":{"x":[0.167],"y":[0.167]},"t":7,"s":[0]},{"t":14.0000005702317,"s":[100]}],"ix":2,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"},"o":{"a":0,"k":0,"ix":3},"m":1,"ix":2,"nm":"Trim Paths 1","mn":"ADBE Vector Filter - Trim","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0},{"ddd":0,"ind":3,"ty":4,"nm":"Circle","sr":1,"ks":{"o":{"a":0,"k":100,"ix":11},"r":{"a":0,"k":0,"ix":10},"p":{"a":0,"k":[150,150,0],"ix":2},"a":{"a":0,"k":[0,0,0],"ix":1},"s":{"a":1,"k":[{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":0,"s":[10,10,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":3,"s":[5,5,100]},{"i":{"x":[0.833,0.833,0.833],"y":[0.833,0.833,0.833]},"o":{"x":[0.167,0.167,0.167],"y":[0.167,0.167,0.167]},"t":9,"s":[110,110,100]},{"t":12.00000048877,"s":[100,100,100]}],"ix":6,"x":"var $bm_rt;\\nvar p = 0.8;\\nvar a = 50;\\nvar s = 1.70158;\\nfunction easeandwizz_inOutQuad(t, b, c, d) {\\n    if ((t /= d / 2) < 1)\\n        return $bm_sum($bm_mul($bm_mul($bm_div(c, 2), t), t), b);\\n    return $bm_sum($bm_mul($bm_div($bm_neg(c), 2), $bm_sub($bm_mul(--t, $bm_sub(t, 2)), 1)), b);\\n}\\nfunction easeAndWizz() {\\n    var t, d, sX, eX, sY, eY, sZ, eZ, val1, val2, val2, val3;\\n    var n = 0;\\n    if (numKeys > 0) {\\n        n = nearestKey(time).index;\\n        if (key(n).time > time) {\\n            n--;\\n        }\\n    }\\n    if (n > 1 && n < numKeys - 1) {\\n        return null;\\n    }\\n    try {\\n        var key1 = key(n);\\n        var key2 = key($bm_sum(n, 1));\\n    } catch (e) {\\n        return null;\\n    }\\n    var dim = 1;\\n    try {\\n        key(1)[1].length;\\n        dim = 2;\\n        key(1)[2].length;\\n        dim = 3;\\n    } catch (e) {\\n    }\\n    t = $bm_sub(time, key1.time);\\n    d = $bm_sub(key2.time, key1.time);\\n    sX = key1[0];\\n    eX = $bm_sub(key2[0], key1[0]);\\n    if (dim >= 2) {\\n        sY = key1[1];\\n        eY = $bm_sub(key2[1], key1[1]);\\n        if (dim >= 3) {\\n            sZ = key1[2];\\n            eZ = $bm_sub(key2[2], key1[2]);\\n        }\\n    }\\n    if (time < key1.time || time > key2.time) {\\n        return value;\\n    } else {\\n        val1 = easeandwizz_inOutQuad(t, sX, eX, d, a, p, s);\\n        switch (dim) {\\n        case 1:\\n            return val1;\\n            break;\\n        case 2:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            return [\\n                val1,\\n                val2\\n            ];\\n            break;\\n        case 3:\\n            val2 = easeandwizz_inOutQuad(t, sY, eY, d, a, p, s);\\n            val3 = easeandwizz_inOutQuad(t, sZ, eZ, d, a, p, s);\\n            return [\\n                val1,\\n                val2,\\n                val3\\n            ];\\n            break;\\n        default:\\n            return null;\\n        }\\n    }\\n}\\n$bm_rt = easeAndWizz() || value;"}},"ao":0,"shapes":[{"ty":"gr","it":[{"d":1,"ty":"el","s":{"a":0,"k":[270.547,270.547],"ix":2},"p":{"a":0,"k":[0,0],"ix":3},"nm":"Ellipse Path 1","mn":"ADBE Vector Shape - Ellipse","hd":false},{"ty":"fl","c":{"a":0,"k":[1,0.321568638086,0.321568638086,1],"ix":4},"o":{"a":0,"k":100,"ix":5},"r":1,"bm":0,"nm":"Fill 1","mn":"ADBE Vector Graphic - Fill","hd":false},{"ty":"tr","p":{"a":0,"k":[-0.727,-0.727],"ix":2},"a":{"a":0,"k":[0,0],"ix":1},"s":{"a":0,"k":[100,100],"ix":3},"r":{"a":0,"k":0,"ix":6},"o":{"a":0,"k":100,"ix":7},"sk":{"a":0,"k":0,"ix":4},"sa":{"a":0,"k":0,"ix":5},"nm":"Transform"}],"nm":"Ellipse 1","np":2,"cix":2,"bm":0,"ix":1,"mn":"ADBE Vector Group","hd":false}],"ip":0,"op":121.000004928431,"st":0,"bm":0}],"markers":[]}')},f0d4:function(n,e,a){}});
//# sourceMappingURL=app.cc300355.js.map